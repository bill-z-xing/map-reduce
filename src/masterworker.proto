syntax = "proto3";

package masterworker;

enum WorkerErrorEnum
{
    kUnknownError = 0;
    kGood = 1;
    kInputFileLengthError = 2;
    kInputFileRangeError = 3;
    kInputFileNewlineError = 4;
    kInputFileGetlineError = 5;
    kTaskTypeError = 6;
    kTaskProcessorNotFoundError = 7;
    kWorkerBusyError = 8;
    kReceptionError = 9;
    kReduceTokenizeError = 10;
    kReduceKeyHashConsistencyError = 11;
}


message FileShard
{
	string filename = 1;
	uint32 offset = 2;
	uint32 length = 3;
}

// Request to execute task sent from master to worker
message TaskRequest
{
	enum TaskType
	{
		kMap = 0;
		kReduce = 1;
	}

	uint32 task_uid = 1;
    string user_id = 2;
	TaskType task_type = 3;

	repeated FileShard input_file = 4;
}

message TaskAck
{
	uint32 task_uid = 1;
	bool success = 2;
    WorkerErrorEnum error_enum = 3;
}

message Ack
{
    bool success = 1;
}

message WorkerConfig
{
    string output_dir = 1;
    uint32 num_output_files = 2;
    uint32 worker_uid = 3;
}


service WorkerService
{
	rpc DispatchTaskToWorker (TaskRequest) returns (TaskAck) {}
    rpc SetConfig (WorkerConfig) returns (Ack) {}
    rpc Close (Ack) returns (Ack) {}
}
